{"version":3,"sources":["graphql/queries.ts","graphql/index.ts","context/index.tsx","hooks/useContext.ts","components/input.tsx","components/spinner.tsx","components/usersList.tsx","pages/main.tsx","components/userInfo.tsx","components/repoList.tsx","pages/user.tsx","components/header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["userQuery","name","graphqlWithAuth","graphql","defaults","headers","authorization","a","this","nodes","search","error","data","console","user","defaultState","avatarUrl","bio","createdAt","email","followers","totalCount","following","login","location","repositories","users","AppContext","createContext","getUserByName","searchUsersByName","StoreProvider","props","state","bind","oktakitGraphql","searchUsers","response","setState","getUser","Provider","value","children","React","Component","useStore","useContext","Default","placeholder","onInputChange","rest","className","type","aria-label","aria-describedby","onChange","id","role","map","index","to","CardImage","CardImageLoader","CardImageInner","src","alt","styled","div","useState","setValue","isLoading","setIsLoading","timeOut","useRef","fetchUsers","clearTimeout","current","event","target","setTimeout","length","StyledAvatar","StyledAvatarLoader","StyledAvatarInner","Date","String","toLocaleDateString","repos","stargazerCount","forkCount","href","rel","useParams","isLoaded","setIsLoaded","setRepos","setError","useEffect","Fragment","filter","item","RegExp","test","App","exact","path","component","Main","render","User","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f45f34cc.chunk.js","sourcesContent":["export const searchQuery = (query: string): string => {\r\n  return `\r\n  {\r\n    search(type: USER, query: \"${query}\",  first: 100) {\r\n      nodes {\r\n        ...on User {\r\n          id,\r\n          avatarUrl,\r\n          name,\r\n          login\r\n          repositories{\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`\r\n}\r\n\r\nexport const userQuery = (name: string = 'nurySar97'): string => {\r\n  return `\r\n  {\r\n    user(login: \"${name}\"){\r\n        name,\r\n        login\r\n        email,\r\n        avatarUrl,\r\n        location,\r\n        createdAt,\r\n        followers {totalCount},\r\n        following {totalCount},\r\n        bio,\r\n        repositories(first: 100) {\r\n          nodes {\r\n            ...on Repository {\r\n              forkCount,\r\n              stargazerCount,\r\n              name\r\n            }\r\n          }\r\n        }\r\n    }\r\n  }`\r\n}\r\n","import { graphql } from '@octokit/graphql'\r\nimport { searchQuery, userQuery } from './queries'\r\nconst TOKEN: string = 'token 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'\r\n\r\nclass OktakitGraphql {\r\n  graphqlWithAuth = graphql.defaults({\r\n    headers: {\r\n      authorization: TOKEN\r\n    }\r\n  })\r\n\r\n  async searchUsers (name: string) {\r\n    try {\r\n      const {\r\n        search: { nodes }\r\n      }: any = await this.graphqlWithAuth(searchQuery(name))\r\n      return { error: false, data: nodes }\r\n    } catch (error) {\r\n      console.error(error)\r\n      return { error: true, data: null }\r\n    }\r\n  }\r\n\r\n  async getUser (name: string) {\r\n    try {\r\n      const { user } = await this.graphqlWithAuth(userQuery(name))\r\n      return { error: false, data: user }\r\n    } catch (error) {\r\n      console.error(error)\r\n      return { error: true, data: null }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new OktakitGraphql()\r\n","import React, { createContext } from 'react'\r\nimport { IContextApp, IStoreProviderState } from './../interfaces/context'\r\nimport oktakitGraphql from './../graphql'\r\n\r\nconst defaultState = {\r\n  user: {\r\n    name: null,\r\n    avatarUrl: null,\r\n    bio: null,\r\n    createdAt: null,\r\n    email: null,\r\n    followers: { totalCount: 0 },\r\n    following: { totalCount: 0 },\r\n    login: null,\r\n    location: null,\r\n    repositories: {\r\n      nodes: []\r\n    }\r\n  },\r\n  users: []\r\n}\r\n\r\nexport const AppContext = createContext<IContextApp>({\r\n  getUserByName: () => {},\r\n  searchUsersByName: () => {},\r\n  ...defaultState\r\n})\r\n\r\nclass StoreProvider extends React.Component<object, IStoreProviderState> {\r\n  state = defaultState\r\n\r\n  constructor (props: {}) {\r\n    super(props)\r\n    this.searchUsersByName = this.searchUsersByName.bind(this)\r\n    this.getUserByName = this.getUserByName.bind(this)\r\n  }\r\n\r\n  async searchUsersByName (name = '') {\r\n    if (name) {\r\n      const response = await oktakitGraphql.searchUsers(name)\r\n      if (!response['error']) {\r\n        this.setState({ users: response['data'] })\r\n      }\r\n      return response['error']\r\n    } else {\r\n      this.setState({ users: [] })\r\n      return false\r\n    }\r\n  }\r\n\r\n  async getUserByName (name = '') {\r\n    if (name) {\r\n      const response = await oktakitGraphql.getUser(name)\r\n      if (!response['error']) {\r\n        this.setState({ user: response['data'] })\r\n      }\r\n      return response['error']\r\n    }\r\n    return false\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <AppContext.Provider\r\n        value={{\r\n          users: this.state.users,\r\n          user: this.state.user,\r\n          searchUsersByName: this.searchUsersByName,\r\n          getUserByName: this.getUserByName\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StoreProvider\r\n","import { useContext } from 'react'\r\nimport { AppContext } from '../context'\r\nimport { IContextApp } from './../interfaces/context'\r\n\r\nconst useStore = (): IContextApp => useContext(AppContext)\r\n\r\nexport default useStore\r\n","import React from 'react'\r\n\r\ninterface defaultProps {\r\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value?: string\r\n}\r\n\r\nconst Default: React.FC<defaultProps> = props => {\r\n  const { placeholder, onInputChange, ...rest } = props\r\n  return (\r\n    <div className='row mb-5'>\r\n      <div className='col-lg-8 col-md-12 mx-auto'>\r\n        <div className='input-group'>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            placeholder={placeholder}\r\n            aria-label='Username'\r\n            aria-describedby='basic-addon1'\r\n            onChange={onInputChange}\r\n            {...rest}\r\n          />\r\n          <span className='input-group-text' id='basic-addon1'>\r\n            <i className='fas fa-search' />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Default\r\n","import React from 'react'\r\n\r\nconst Default = () => {\r\n  return (\r\n    <section className='text-center'>\r\n      <div className='spinner-border text-primary' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Default\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { IUsersItem } from './../interfaces/context'\r\n\r\ninterface propTypes {\r\n  users: Array<IUsersItem>\r\n}\r\n\r\nconst Default: React.FC<propTypes> = ({ users }) => {\r\n  return (\r\n    <div className='card'>\r\n      <ul className='list-group'>\r\n        {users.map(({ id, avatarUrl, name, login, repositories }, index) => {\r\n          if (!name && !login) return null\r\n          return (\r\n            <li\r\n              className='list-group-item cursor-pointer'\r\n              key={index + ' ' + id}\r\n            >\r\n              <Link to={`/user/${login}`}>\r\n                <div className='row'>\r\n                  <div className='col-3 col-sm-3 col-md-1'>\r\n                    <CardImage>\r\n                      <CardImageLoader />\r\n                      <CardImageInner>\r\n                        <img src={`${avatarUrl}`} alt='' />\r\n                      </CardImageInner>\r\n                    </CardImage>\r\n                  </div>\r\n                  <div className='col-6 col-sm-5 col-md-6 d-flex align-items-center'>\r\n                    <span className='fs-4 fw-bold'>{name || login}</span>\r\n                  </div>\r\n                  <div className='col-2 col-sm-4 col-md-5 d-flex align-items-center justify-content-end'>\r\n                    <span className='fs-4 fw-bold'>\r\n                      {repositories.totalCount}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Default\r\n\r\nconst CardImage = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  position: relative;\r\n`\r\n\r\nconst CardImageLoader = styled.div`\r\n  width: 100%;\r\n  padding-top: 100%;\r\n  background: #b8b6b5;\r\n`\r\n\r\nconst CardImageInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  & img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\n","import React, { useRef, useState } from 'react'\r\nimport useStore from '../hooks/useContext'\r\nimport Input from './../components/input'\r\nimport Spinner from './../components/spinner'\r\nimport UsersList from './../components/usersList'\r\n\r\nconst Default: React.FC = () => {\r\n  const { searchUsersByName, users } = useStore()\r\n  const [value, setValue] = useState<string>('')\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const timeOut = useRef<any>(null)\r\n\r\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    clearTimeout(timeOut.current)\r\n    const value: string = event.target.value\r\n    setIsLoading(() => true)\r\n    setValue(value)\r\n\r\n    if (!value) {\r\n      setIsLoading(() => false)\r\n      searchUsersByName('')\r\n      return\r\n    }\r\n    timeOut.current = setTimeout(fetchUsers, 800)\r\n  }\r\n\r\n  async function fetchUsers () {\r\n    await searchUsersByName(value)\r\n    await setIsLoading(() => false)\r\n    clearTimeout(timeOut.current)\r\n  }\r\n\r\n  return (\r\n    <main className='main'>\r\n      <div className='main-inner py-3 px-3 p-sm-3 br-3 rounded-3'>\r\n        <Input\r\n          onInputChange={onInputChange}\r\n          placeholder={'Search users...'}\r\n          value={value}\r\n        />\r\n\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : users.length ? (\r\n          <UsersList users={users} />\r\n        ) : (\r\n          <div className='text-center'>No result yet</div>\r\n        )}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Default\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { IUser } from '../interfaces/context'\r\n\r\ninterface propsTypes {\r\n  user: IUser\r\n}\r\n\r\nconst Default: React.FC<propsTypes> = ({ user }) => {\r\n  const {\r\n    avatarUrl,\r\n    name,\r\n    login,\r\n    email,\r\n    createdAt,\r\n    followers,\r\n    following,\r\n    bio,\r\n    location\r\n  } = user\r\n  return (\r\n    <section>\r\n      <div className='row'>\r\n        <div className='col-md-3'>\r\n          <StyledAvatar className='mx-sm-auto mx-auto'>\r\n            <StyledAvatarLoader />\r\n            <StyledAvatarInner>\r\n              <img src={`${avatarUrl}`} alt='avatar' />\r\n            </StyledAvatarInner>\r\n          </StyledAvatar>\r\n        </div>\r\n        <div className='col-md-8 col-sm-12 mt-sm-3 mt-md-0 mt-3'>\r\n          <p className='fs-3 fw-bold'>{name || login}</p>\r\n          <p>{email}</p>\r\n          <p>{location}</p>\r\n          <p>Created: {new Date(String(createdAt)).toLocaleDateString()}</p>\r\n          <p>{followers.totalCount} Followers</p>\r\n          <p>Following {following?.totalCount}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fs-3 mb-3 text-center'>{bio}</div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Default\r\n\r\nconst StyledAvatar = styled.div`\r\n  width: 100%;\r\n  max-width: 300px;\r\n  position: relative;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n`\r\nconst StyledAvatarLoader = styled.div`\r\n  width: 100%;\r\n  padding-top: 110%;\r\n  background-color: #c2c2c2;\r\n`\r\n\r\nconst StyledAvatarInner = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { INodesItem } from './../interfaces/context'\r\n\r\ninterface propTypes {\r\n  repos: Array<INodesItem>\r\n  login: string\r\n}\r\n\r\nconst Default: React.FC<propTypes> = ({ repos, login }) => {\r\n  return (\r\n    <div className='card'>\r\n      <ul className='list-group'>\r\n        {repos.map(({ name, stargazerCount, forkCount }, index) => {\r\n          return (\r\n            <li className='list-group-item cursor-pointer' key={index}>\r\n              <a\r\n                href={`https://github.com/${login}/${name}`}\r\n                target='_blank'\r\n                rel='noreferrer'\r\n              >\r\n                <div className='row'>\r\n                  <div className='d-flex align-items-center col-8 col-sm-3 col-md-8 fs-5 fw-bold'>\r\n                    {name}\r\n                  </div>\r\n                  <div className='col-6 col-sm-5 col-md-4 d-flex flex-column'>\r\n                    <p className='text-end'>{forkCount} Forks</p>\r\n                    <p className='text-end'>{stargazerCount} Stars</p>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Default\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect, useParams } from 'react-router'\r\nimport useStore from '../hooks/useContext'\r\nimport Input from './../components/input'\r\nimport { INodesItem } from './../interfaces/context'\r\nimport UserInfo from './../components/userInfo'\r\nimport Spinner from './../components/spinner'\r\nimport RepoList from './../components/repoList'\r\n\r\ninterface IParams {\r\n  login: string\r\n}\r\n\r\nconst Default: React.FC = () => {\r\n  const { login } = useParams<IParams>()\r\n  const { getUserByName, user } = useStore()\r\n  const { repositories } = user\r\n  const [value, setValue] = useState<string>('')\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(true)\r\n  const [repos, setRepos] = useState<INodesItem[]>(repositories.nodes)\r\n  const [error, setError] = useState<boolean>(false)\r\n\r\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value\r\n    setValue(value)\r\n\r\n    if (!value) return setRepos([])\r\n\r\n    setRepos(() =>\r\n      repositories.nodes.filter(item =>\r\n        new RegExp(value, 'i').test(`{${item.name}}`)\r\n      )\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    void (async function () {\r\n      const response = await getUserByName(login)\r\n      response && setError(response)\r\n      setIsLoaded(true)\r\n    })()\r\n  }, [getUserByName, login])\r\n\r\n  if (error) return <Redirect to='/' />\r\n  return (\r\n    <main className='main'>\r\n      <div className='main-inner py-3 px-3 p-sm-3 br-3 rounded-3'>\r\n        {isLoaded ? (\r\n          <React.Fragment>\r\n            <UserInfo user={user} />\r\n            <Input\r\n              onInputChange={onInputChange}\r\n              value={value}\r\n              placeholder={\"Search for User's Repositories\"}\r\n            />\r\n            {!!value && !!repos.length ? (\r\n              <RepoList repos={repos} login={login} />\r\n            ) : (\r\n              <div className='text-center'>No result yet</div>\r\n            )}\r\n          </React.Fragment>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Default\r\n","import React from 'react'\r\n\r\nconst Default = () => {\r\n  return (\r\n    <header>\r\n      <h1 className='h1 text-light text-center'>GitHub Searcher</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Default\r\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\nimport { Main, User } from './pages'\nimport Header from './components/header'\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <div className='container'>\n        <div className='py-3'>\n          <Header />\n          <Switch>\n            <Route exact path={'/'} component={Main} />\n            <Route exact path={'/user'} render={() => <Redirect to='/' />} />\n            <Route path={'/user/:login'} component={User} />\n            <Redirect to='/' />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport StoreProvider from './context'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <StoreProvider>\n        <App />\n      </StoreProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}